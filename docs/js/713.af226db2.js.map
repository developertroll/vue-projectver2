{"version":3,"file":"js/713.af226db2.js","mappings":"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","sources":["webpack://vue-projectver2/./src/components/composables/Message.js","webpack://vue-projectver2/./src/components/common/userAvatar.vue","webpack://vue-projectver2/./src/components/common/userAvatar.vue?b1a6","webpack://vue-projectver2/./src/components/private/ShowMessage.vue","webpack://vue-projectver2/./src/components/private/ShowMessage.vue?1bf4"],"sourcesContent":["import { shallowReactive } from \"vue\";\r\nimport moment from \"moment\";\r\nimport { Member } from \"./Member\";\r\nimport { Alarm } from \"./Alarm\";\r\n\r\nexport const Message = shallowReactive({\r\n  List: localStorage.getItem(\"messageList\")\r\n    ? JSON.parse(localStorage.getItem(\"messageList\"))\r\n    : [],\r\n  refreshList() {\r\n    localStorage.setItem(\"messageList\", JSON.stringify(this.List));\r\n    this.List = JSON.parse(localStorage.getItem(\"messageList\"));\r\n  },\r\n  template: {\r\n    index: \"\",\r\n    from: \"\",\r\n    to: \"\",\r\n    reference: \"\",\r\n    title: \"\",\r\n    content: \"\",\r\n    update: moment().format(\"YYYY-MM-DD\"),\r\n    status: true, // true: 존재하는 메세지 false: 삭제된 메세지\r\n    read: false, // true: 읽은 메세지 false: 읽지 않은 메세지\r\n  },\r\n  createMessage(protoItem) {\r\n    if (protoItem.to.length > 1) {\r\n      protoItem.to.forEach((el) => {\r\n        const item = {\r\n          index: this.List.length,\r\n          from: Member.currentMember,\r\n          to: el,\r\n          reference:\r\n            protoItem.reference === \"\"\r\n              ? []\r\n              : Array.isArray(protoItem.reference)\r\n              ? protoItem.reference\r\n              : [protoItem.reference],\r\n          title: protoItem.title,\r\n          content: protoItem.content,\r\n          update: moment().format(\"YYYY-MM-DD\"),\r\n          status: true,\r\n          read: false,\r\n        };\r\n        Alarm.createAlarm(\"messageSend\", item.from, item.to);\r\n        this.List.push(item);\r\n      });\r\n      this.refreshList();\r\n      return;\r\n    }\r\n    const item = {\r\n      index: this.List.length,\r\n      from: Member.currentMember,\r\n      to: protoItem.to,\r\n      reference:\r\n        protoItem.reference === \"\"\r\n          ? []\r\n          : Array.isArray(protoItem.reference)\r\n          ? protoItem.reference\r\n          : [protoItem.reference],\r\n      title: protoItem.title,\r\n      content: protoItem.content,\r\n      update: moment().format(\"YYYY-MM-DD\"),\r\n      status: true,\r\n    };\r\n    this.List.push(item);\r\n    Alarm.createAlarm(\"messageSend\", item.from, item.to);\r\n    this.refreshList();\r\n  },\r\n  editMessage(protoMessage, parentIndex, replyCheck = false) {\r\n    const newMessage = {\r\n      index: this.List.length,\r\n      from: Member.currentMember,\r\n      to: protoMessage.to,\r\n      reference:\r\n        protoMessage.reference === \"\"\r\n          ? []\r\n          : Array.isArray(protoMessage.reference)\r\n          ? protoMessage.reference\r\n          : [protoMessage.reference],\r\n      title: protoMessage.title,\r\n      content: protoMessage.content,\r\n      update: moment().format(\"YYYY-MM-DD\"),\r\n      status: true,\r\n      read: false,\r\n    };\r\n    if (replyCheck) {\r\n      this.filterReplyMessageGroupReply(parentIndex).length > 0\r\n        ? this.addReplyMessageGroup(parentIndex, newMessage.index)\r\n        : this.createReplyMessageGroup(parentIndex, newMessage.index);\r\n    }\r\n    this.List.push(newMessage);\r\n    Alarm.createAlarm(\"messageSend\", newMessage.from, newMessage.to);\r\n    this.refreshList();\r\n  },\r\n  getAllList() {\r\n    let result = [];\r\n    this.List.forEach((el) => {\r\n      if (el.status) {\r\n        let reference = \"\";\r\n        if (el.reference) {\r\n          el.reference.forEach((el) => {\r\n            reference += Member.findMemberByIndex(el).name + \" ,\";\r\n          });\r\n        } else {\r\n          reference = [];\r\n        }\r\n        result.push({\r\n          index: el.index,\r\n          from: Member.findMemberByIndex(el.from).name,\r\n          to: Member.findMemberByIndex(el.to).name,\r\n          reference: reference,\r\n          title: el.title,\r\n          content: el.content,\r\n          update: el.update,\r\n          status: el.status,\r\n          read: el.read,\r\n        });\r\n      }\r\n    });\r\n    return result;\r\n  },\r\n  getMessage(member) {\r\n    const memberName = Member.findMemberByIndex(member).name;\r\n    return this.getAllList().filter(\r\n      (el) => el.to === memberName || el.reference.includes(memberName)\r\n    );\r\n  },\r\n  findMessageByIndex(index) {\r\n    return this.getAllList().find((el) => el.index === index);\r\n  },\r\n  findOriginalMessageByIndex(index) {\r\n    return this.List.find((el) => el.index === index);\r\n  },\r\n  deleteMessage(index) {\r\n    const target = this.findMessageByIndex(index);\r\n    target.status = false;\r\n    this.refreshList();\r\n  },\r\n  calculateMessageCountByMessage(index) {\r\n    const target = this.List.find((el) => el.index === index);\r\n    const targetMember = target.to;\r\n    const targetAllMessage = this.List.filter((el) => el.to === targetMember);\r\n    const targetmessage = targetAllMessage.find((el) => el.index === index);\r\n    return `${targetAllMessage.indexOf(targetmessage) + 1}/${\r\n      targetAllMessage.length\r\n    }`;\r\n  },\r\n  referenceCheck(index) {\r\n    const target = this.List.find((el) => el.index === index);\r\n    return target.to === Member.currentMember;\r\n  },\r\n  readMessage(index) {\r\n    const target = this.List.find((el) => el.index === index);\r\n    target.read = true;\r\n    this.refreshList();\r\n  },\r\n  // 아래 코드는 메시지가 답장을 통해서 생성되었을때, 원본과 답장을 그룹화하여 차후 메시지 보기를 할때 원본과 답장을 함께 보여주기 위한 코드입니다.\r\n  ReplyMessageGroup: localStorage.getItem(\"replyMessageGroup\")\r\n    ? JSON.parse(localStorage.getItem(\"replyMessageGroup\"))\r\n    : [],\r\n  refreshGroup() {\r\n    localStorage.setItem(\r\n      \"replyMessageGroup\",\r\n      JSON.stringify(this.ReplyMessageGroup)\r\n    );\r\n    this.ReplyMessageGroup = JSON.parse(\r\n      localStorage.getItem(\"replyMessageGroup\")\r\n    );\r\n  },\r\n  createReplyMessageGroup(originalMessage, replyMessage) {\r\n    const group = {\r\n      index: this.ReplyMessageGroup.length,\r\n      originalMessage: originalMessage,\r\n      replyMessage: [replyMessage],\r\n      status: true,\r\n    };\r\n    this.ReplyMessageGroup.push(group);\r\n    this.refreshGroup();\r\n  },\r\n  addReplyMessageGroup(originalMessage, replyMessage) {\r\n    let target = this.findGroupByOGIndex(originalMessage);\r\n    if (target === undefined) {\r\n      target = this.filterReplyMessageGroupReply(originalMessage)[0];\r\n    }\r\n    target.replyMessage.push(replyMessage);\r\n    this.refreshGroup();\r\n  },\r\n  findGroupByOGIndex(index) {\r\n    return this.ReplyMessageGroup.find((el) => el.originalMessage === index);\r\n  },\r\n  filterReplyMessageGroupReply(index) {\r\n    return this.ReplyMessageGroup.filter((el) =>\r\n      el.replyMessage.includes(index)\r\n    );\r\n  },\r\n  getReplyChainArray(unknownIndex) {\r\n    const result = [];\r\n    if (this.findGroupByOGIndex(unknownIndex)) {\r\n      const target = this.findGroupByOGIndex(unknownIndex);\r\n      result.push(this.findOriginalMessageByIndex(target.originalMessage));\r\n      target.replyMessage.forEach((el) => {\r\n        result.push(this.findOriginalMessageByIndex(el));\r\n      });\r\n      return result;\r\n    } else if (this.filterReplyMessageGroupReply(unknownIndex).length > 0) {\r\n      const target = this.filterReplyMessageGroupReply(unknownIndex);\r\n      target.forEach((el) => {\r\n        result.push(this.findOriginalMessageByIndex(el.originalMessage));\r\n        el.replyMessage.forEach((el) => {\r\n          result.push(this.findOriginalMessageByIndex(el));\r\n        });\r\n      });\r\n      return result;\r\n    } else {\r\n      return result;\r\n    }\r\n  },\r\n});\r\n","<template lang=\"\">\r\n  <div>\r\n    <el-avatar :color=\"color\" :background-color=\"color\">\r\n      <el-icon :color=\"color\" :size=\"size\"><UserFilled /></el-icon>\r\n    </el-avatar>\r\n    <span class=\"nameTab\">{{ member.name }}({{ member.department }})</span>\r\n  </div>\r\n</template>\r\n<script>\r\nimport { UserFilled } from \"@element-plus/icons-vue\";\r\nimport { Member } from \"@/components/composables/Member\";\r\nexport default {\r\n  name: \"userAvatar\",\r\n  components: {\r\n    UserFilled,\r\n  },\r\n  data() {\r\n    return {\r\n      size: \"large\",\r\n      member: {},\r\n      color: \"\",\r\n    };\r\n  },\r\n  props: {\r\n    parentMember: {\r\n      type: Number,\r\n      default: 2,\r\n    },\r\n  },\r\n  methods: {\r\n    colorCheck() {\r\n      switch (this.member.department) {\r\n        case \"기획\":\r\n          return \"#409EFF\";\r\n        case \"개발\":\r\n          return \"#67C23A\";\r\n        case \"디자인\":\r\n          return \"#E6A23C\";\r\n        case \"기타\":\r\n          return \"#F56C6C\";\r\n        default:\r\n          return \"#909399\";\r\n      }\r\n    },\r\n  },\r\n  mounted() {\r\n    this.member = Member.findMemberByIndex(this.parentMember);\r\n    this.color = this.colorCheck();\r\n  },\r\n};\r\n</script>\r\n<style scoped>\r\n.el-avatar {\r\n  --el-avatar-bg-color: var(--el-color-primary-light-9);\r\n}\r\n.nameTab {\r\n  margin-left: 10px;\r\n  font-weight: bold;\r\n}\r\n</style>\r\n","import { render } from \"./userAvatar.vue?vue&type=template&id=5cbeb6c0&scoped=true&lang=true\"\nimport script from \"./userAvatar.vue?vue&type=script&lang=js\"\nexport * from \"./userAvatar.vue?vue&type=script&lang=js\"\n\nimport \"./userAvatar.vue?vue&type=style&index=0&id=5cbeb6c0&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-5cbeb6c0\"]])\n\nexport default __exports__","<template lang=\"\">\r\n  <div>\r\n    <div>\r\n      <!-- 해당 div는 각종 작업을 할 버튼들이 들어감. 해당 topbar는 고정 -->\r\n      <!-- 뒤로가기(목록), 삭제, 오른쪽에는 자신에게 온 Message중에서 이게 몇번째인지 -->\r\n      <el-row>\r\n        <el-col :span=\"8\">\r\n          <el-button-group>\r\n            <el-button type=\"primary\" @click=\"returnToMain\">목록</el-button>\r\n            <el-button type=\"primary\" @click=\"deleteMessage\"\r\n              >삭제</el-button\r\n            ></el-button-group\r\n          ></el-col\r\n        >\r\n        <el-col :span=\"4\" :offset=\"12\">{{ tempWhere }}</el-col>\r\n      </el-row>\r\n    </div>\r\n    <div class=\"messageTitle\">\r\n      {{ title }}\r\n    </div>\r\n    <div>\r\n      <!-- from아바타, from, 보낸시각(update), dropdown(답장,전달) -->\r\n      <el-row>\r\n        <el-col :span=\"4\">보낸 사람</el-col>\r\n        <el-col :span=\"4\" v-if=\"isReference\">받는 사람</el-col>\r\n      </el-row>\r\n      <el-row v-if=\"isReference\">\r\n        <el-col :span=\"4\"><userAvatar :parentMember=\"originalFrom\" /></el-col>\r\n        <el-col :span=\"4\"><userAvatar :parentMember=\"originalTo\" /></el-col>\r\n        <el-col :span=\"4\" :offset=\"12\">{{ messageData.update }}</el-col>\r\n        <!-- 참조라서 받은 경우 이곳에 to도 avatar처리해서 보여주기 -->\r\n      </el-row>\r\n      <el-row v-else>\r\n        <el-col :span=\"4\"><userAvatar :parentMember=\"originalFrom\" /></el-col>\r\n        <el-col :span=\"4\" :offset=\"16\">{{ messageData.update }}</el-col>\r\n        <!-- 참조라서 받은 경우 이곳에 to도 avatar처리해서 보여주기 -->\r\n      </el-row>\r\n    </div>\r\n    <div class=\"bigSize\">\r\n      <!-- 내용 -->\r\n      <div v-html=\"content\"></div>\r\n    </div>\r\n    <div>\r\n      <!-- 답장, 전달 큰 버튼 -->\r\n      <el-button type=\"primary\" @click=\"reply\" size=\"large\">답장</el-button>\r\n      <el-button type=\"primary\" @click=\"resend\" size=\"large\">전달</el-button>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\nimport { Message } from \"@/components/composables/Message\";\r\nimport { ElMessage, ElMessageBox } from \"element-plus\";\r\nimport userAvatar from \"@/components/common/userAvatar.vue\";\r\nimport { Member } from \"@/components/composables/Member\";\r\n\r\nexport default {\r\n  name: \"ShowMessage\",\r\n  components: {\r\n    userAvatar,\r\n  },\r\n  data() {\r\n    return {\r\n      title: \"\",\r\n      content: null,\r\n    };\r\n  },\r\n  props: {\r\n    parentIndex: {\r\n      type: Number,\r\n      required: true,\r\n    },\r\n  },\r\n  computed: {\r\n    messageData() {\r\n      return Message.findMessageByIndex(this.parentIndex);\r\n    },\r\n    originalFrom() {\r\n      return Message.findOriginalMessageByIndex(this.parentIndex).from;\r\n    },\r\n    originalTo() {\r\n      return Message.findOriginalMessageByIndex(this.parentIndex).to;\r\n    },\r\n    tempWhere() {\r\n      return Message.calculateMessageCountByMessage(this.parentIndex);\r\n    },\r\n    isReference() {\r\n      return (\r\n        Message.findOriginalMessageByIndex(this.parentIndex).to !==\r\n        Member.currentMember\r\n      );\r\n    },\r\n  },\r\n  methods: {\r\n    pageInit() {\r\n      this.title = this.messageData.title;\r\n      this.content = this.messageData.content;\r\n    },\r\n    debug() {\r\n      console.log(this.messageData);\r\n      console.log(this.descriptionData);\r\n    },\r\n    reply() {\r\n      this.$emit(\"reply\");\r\n    },\r\n    resend() {\r\n      this.$emit(\"resend\");\r\n    },\r\n    deleteMessage() {\r\n      ElMessageBox.confirm(\"삭제하시겠습니까?\", \"경고\", {\r\n        confirmButtonText: \"예\",\r\n        cancelButtonText: \"아니오\",\r\n        type: \"warning\",\r\n      }).then(() => {\r\n        ElMessage({\r\n          type: \"info\",\r\n          message: \"삭제되었습니다\",\r\n        });\r\n        this.$emit(\"deleteMessage\");\r\n      });\r\n    },\r\n    returnToMain() {\r\n      this.$emit(\"returnToMain\");\r\n    },\r\n  },\r\n  mounted() {\r\n    this.pageInit();\r\n  },\r\n};\r\n</script>\r\n<style scoped>\r\n.bigSize {\r\n  margin-top: 20px;\r\n  padding: 10px;\r\n}\r\n.messageTitle {\r\n  font-size: 20px;\r\n  font-weight: bold;\r\n  margin: 10px;\r\n}\r\n</style>\r\n","import { render } from \"./ShowMessage.vue?vue&type=template&id=4423cb52&scoped=true&lang=true\"\nimport script from \"./ShowMessage.vue?vue&type=script&lang=js\"\nexport * from \"./ShowMessage.vue?vue&type=script&lang=js\"\n\nimport \"./ShowMessage.vue?vue&type=style&index=0&id=4423cb52&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-4423cb52\"]])\n\nexport default __exports__"],"names":["Message","shallowReactive","List","localStorage","getItem","JSON","parse","refreshList","setItem","stringify","this","template","index","from","to","reference","title","content","update","moment","format","status","read","createMessage","protoItem","length","forEach","el","item","Member","currentMember","Array","isArray","Alarm","createAlarm","push","editMessage","protoMessage","parentIndex","replyCheck","newMessage","filterReplyMessageGroupReply","addReplyMessageGroup","createReplyMessageGroup","getAllList","result","findMemberByIndex","name","getMessage","member","memberName","filter","includes","findMessageByIndex","find","findOriginalMessageByIndex","deleteMessage","target","calculateMessageCountByMessage","targetMember","targetAllMessage","targetmessage","indexOf","referenceCheck","readMessage","ReplyMessageGroup","refreshGroup","originalMessage","replyMessage","group","findGroupByOGIndex","undefined","getReplyChainArray","unknownIndex","class","_createElementBlock","_createVNode","_component_el_avatar","color","$data","_component_el_icon","size","_component_UserFilled","_createElementVNode","_hoisted_1","_toDisplayString","department","components","UserFilled","data","props","parentMember","type","Number","default","methods","colorCheck","mounted","__exports__","render","_component_el_row","_component_el_col","span","_component_el_button_group","_component_el_button","onClick","$options","returnToMain","offset","tempWhere","isReference","_createBlock","key","_component_userAvatar","originalFrom","originalTo","messageData","_hoisted_2","innerHTML","_hoisted_3","reply","resend","userAvatar","required","computed","pageInit","debug","console","log","descriptionData","$emit","ElMessageBox","confirm","confirmButtonText","cancelButtonText","then","ElMessage","message"],"sourceRoot":""}