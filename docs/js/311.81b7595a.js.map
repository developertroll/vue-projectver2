{"version":3,"file":"js/311.81b7595a.js","mappings":"4NAKO,MAAMA,GAAUC,EAAAA,EAAAA,IAAgB,CACrCC,KAAMC,aAAaC,QAAQ,eACvBC,KAAKC,MAAMH,aAAaC,QAAQ,gBAChC,GACJG,WAAAA,GACEJ,aAAaK,QAAQ,cAAeH,KAAKI,UAAUC,KAAKR,OACxDQ,KAAKR,KAAOG,KAAKC,MAAMH,aAAaC,QAAQ,eAC9C,EACAO,SAAU,CACRC,MAAO,GACPC,KAAM,GACNC,GAAI,GACJC,UAAW,GACXC,MAAO,GACPC,QAAS,GACTC,OAAQC,MAASC,OAAO,cACxBC,QAAQ,EACRC,MAAM,GAERC,aAAAA,CAAcC,GACZ,GAAIA,EAAUV,GAAGW,OAAS,EAsBxB,OArBAD,EAAUV,GAAGY,SAASC,IACpB,MAAMC,EAAO,CACXhB,MAAOF,KAAKR,KAAKuB,OACjBZ,KAAMgB,EAAAA,EAAOC,cACbhB,GAAIa,EACJZ,UAC0B,KAAxBS,EAAUT,UACN,GACAgB,MAAMC,QAAQR,EAAUT,WACxBS,EAAUT,UACV,CAACS,EAAUT,WACjBC,MAAOQ,EAAUR,MACjBC,QAASO,EAAUP,QACnBC,OAAQC,MAASC,OAAO,cACxBC,QAAQ,EACRC,MAAM,GAERW,EAAAA,EAAMC,YAAY,cAAeN,EAAKf,KAAMe,EAAKd,IACjDJ,KAAKR,KAAKiC,KAAKP,EAAK,SAEtBlB,KAAKH,cAGP,MAAMqB,EAAO,CACXhB,MAAOF,KAAKR,KAAKuB,OACjBZ,KAAMgB,EAAAA,EAAOC,cACbhB,GAAIU,EAAUV,GACdC,UAC0B,KAAxBS,EAAUT,UACN,GACAgB,MAAMC,QAAQR,EAAUT,WACxBS,EAAUT,UACV,CAACS,EAAUT,WACjBC,MAAOQ,EAAUR,MACjBC,QAASO,EAAUP,QACnBC,OAAQC,MAASC,OAAO,cACxBC,QAAQ,GAEVX,KAAKR,KAAKiC,KAAKP,GACfK,EAAAA,EAAMC,YAAY,cAAeN,EAAKf,KAAMe,EAAKd,IACjDJ,KAAKH,aACP,EACA6B,WAAAA,CAAYC,EAAcC,EAAaC,GAAa,GAClD,MAAMC,EAAa,CACjB5B,MAAOF,KAAKR,KAAKuB,OACjBZ,KAAMgB,EAAAA,EAAOC,cACbhB,GAAIuB,EAAavB,GACjBC,UAC6B,KAA3BsB,EAAatB,UACT,GACAgB,MAAMC,QAAQK,EAAatB,WAC3BsB,EAAatB,UACb,CAACsB,EAAatB,WACpBC,MAAOqB,EAAarB,MACpBC,QAASoB,EAAapB,QACtBC,OAAQC,MAASC,OAAO,cACxBC,QAAQ,EACRC,MAAM,GAEJiB,IACF7B,KAAK+B,6BAA6BH,GAAab,OAAS,EACpDf,KAAKgC,qBAAqBJ,EAAaE,EAAW5B,OAClDF,KAAKiC,wBAAwBL,EAAaE,EAAW5B,QAE3DF,KAAKR,KAAKiC,KAAKK,GACfP,EAAAA,EAAMC,YAAY,cAAeM,EAAW3B,KAAM2B,EAAW1B,IAC7DJ,KAAKH,aACP,EACAqC,UAAAA,GACE,IAAIC,EAAS,GAwBb,OAvBAnC,KAAKR,KAAKwB,SAASC,IACjB,GAAIA,EAAGN,OAAQ,CACb,IAAIN,EAAY,GACZY,EAAGZ,UACLY,EAAGZ,UAAUW,SAASC,IACpBZ,GAAac,EAAAA,EAAOiB,kBAAkBnB,GAAIoB,KAAO,IAAI,IAGvDhC,EAAY,GAEd8B,EAAOV,KAAK,CACVvB,MAAOe,EAAGf,MACVC,KAAMgB,EAAAA,EAAOiB,kBAAkBnB,EAAGd,MAAMkC,KACxCjC,GAAIe,EAAAA,EAAOiB,kBAAkBnB,EAAGb,IAAIiC,KACpChC,UAAWA,EACXC,MAAOW,EAAGX,MACVC,QAASU,EAAGV,QACZC,OAAQS,EAAGT,OACXG,OAAQM,EAAGN,OACXC,KAAMK,EAAGL,MAEb,KAEKuB,CACT,EACAG,UAAAA,CAAWC,GACT,MAAMC,EAAarB,EAAAA,EAAOiB,kBAAkBG,GAAQF,KACpD,OAAOrC,KAAKkC,aAAaO,QACtBxB,GAAOA,EAAGb,KAAOoC,GAAcvB,EAAGZ,UAAUqC,SAASF,IAE1D,EACAG,kBAAAA,CAAmBzC,GACjB,OAAOF,KAAKkC,aAAaU,MAAM3B,GAAOA,EAAGf,QAAUA,GACrD,EACA2C,0BAAAA,CAA2B3C,GACzB,OAAOF,KAAKR,KAAKoD,MAAM3B,GAAOA,EAAGf,QAAUA,GAC7C,EACA4C,aAAAA,CAAc5C,GACZ,MAAM6C,EAAS/C,KAAK2C,mBAAmBzC,GACvC6C,EAAOpC,QAAS,EAChBX,KAAKH,aACP,EACAmD,8BAAAA,CAA+B9C,GAC7B,MAAM6C,EAAS/C,KAAKR,KAAKoD,MAAM3B,GAAOA,EAAGf,QAAUA,IAC7C+C,EAAeF,EAAO3C,GACtB8C,EAAmBlD,KAAKR,KAAKiD,QAAQxB,GAAOA,EAAGb,KAAO6C,IACtDE,EAAgBD,EAAiBN,MAAM3B,GAAOA,EAAGf,QAAUA,IACjE,MAAQ,GAAEgD,EAAiBE,QAAQD,GAAiB,KAClDD,EAAiBnC,QAErB,EACAsC,cAAAA,CAAenD,GACb,MAAM6C,EAAS/C,KAAKR,KAAKoD,MAAM3B,GAAOA,EAAGf,QAAUA,IACnD,OAAO6C,EAAO3C,KAAOe,EAAAA,EAAOC,aAC9B,EACAkC,WAAAA,CAAYpD,GACV,MAAM6C,EAAS/C,KAAKR,KAAKoD,MAAM3B,GAAOA,EAAGf,QAAUA,IACnD6C,EAAOnC,MAAO,EACdZ,KAAKH,aACP,EAEA0D,kBAAmB9D,aAAaC,QAAQ,qBACpCC,KAAKC,MAAMH,aAAaC,QAAQ,sBAChC,GACJ8D,YAAAA,GACE/D,aAAaK,QACX,oBACAH,KAAKI,UAAUC,KAAKuD,oBAEtBvD,KAAKuD,kBAAoB5D,KAAKC,MAC5BH,aAAaC,QAAQ,qBAEzB,EACAuC,uBAAAA,CAAwBwB,EAAiBC,GACvC,MAAMC,EAAQ,CACZzD,MAAOF,KAAKuD,kBAAkBxC,OAC9B0C,gBAAiBA,EACjBC,aAAc,CAACA,GACf/C,QAAQ,GAEVX,KAAKuD,kBAAkB9B,KAAKkC,GAC5B3D,KAAKwD,cACP,EACAxB,oBAAAA,CAAqByB,EAAiBC,GACpC,IAAIX,EAAS/C,KAAK4D,mBAAmBH,QACtBI,IAAXd,IACFA,EAAS/C,KAAK+B,6BAA6B0B,GAAiB,IAE9DV,EAAOW,aAAajC,KAAKiC,GACzB1D,KAAKwD,cACP,EACAI,kBAAAA,CAAmB1D,GACjB,OAAOF,KAAKuD,kBAAkBX,MAAM3B,GAAOA,EAAGwC,kBAAoBvD,GACpE,EACA6B,4BAAAA,CAA6B7B,GAC3B,OAAOF,KAAKuD,kBAAkBd,QAAQxB,GACpCA,EAAGyC,aAAahB,SAASxC,IAE7B,EACA4D,kBAAAA,CAAmBC,GACjB,MAAM5B,EAAS,GACf,GAAInC,KAAK4D,mBAAmBG,GAAe,CACzC,MAAMhB,EAAS/C,KAAK4D,mBAAmBG,GAKvC,OAJA5B,EAAOV,KAAKzB,KAAK6C,2BAA2BE,EAAOU,kBACnDV,EAAOW,aAAa1C,SAASC,IAC3BkB,EAAOV,KAAKzB,KAAK6C,2BAA2B5B,GAAI,IAE3CkB,CACT,CAAO,GAAInC,KAAK+B,6BAA6BgC,GAAchD,OAAS,EAAG,CACrE,MAAMgC,EAAS/C,KAAK+B,6BAA6BgC,GAOjD,OANAhB,EAAO/B,SAASC,IACdkB,EAAOV,KAAKzB,KAAK6C,2BAA2B5B,EAAGwC,kBAC/CxC,EAAGyC,aAAa1C,SAASC,IACvBkB,EAAOV,KAAKzB,KAAK6C,2BAA2B5B,GAAI,GAChD,IAEGkB,CACT,CACE,OAAOA,CAEX,G,qGCjNW6B,MAAM,a,gGANjBC,EAAAA,EAAAA,IAeM,aAdJC,EAAAA,EAAAA,GAEM,aADJC,EAAAA,EAAAA,IAAqEC,EAAA,CAA1DC,KAAK,UAAWC,QAAOC,EAAAC,Y,mBAAY,IAAW,mBAARC,EAAAnE,OAAK,M,uBAExD6D,EAAAA,EAAAA,IAUYO,EAAA,C,WAVQC,EAAAC,c,qCAAAD,EAAAC,cAAaC,GAAE,oBAAgB,cAAY,G,CAClDC,QAAMC,EAAAA,EAAAA,KACf,IAGM,EAHNb,EAAAA,EAAAA,GAGM,MAHNc,EAGM,EAFJd,EAAAA,EAAAA,GAAoB,WAAAe,EAAAA,EAAAA,IAAbR,EAAAnE,OAAK,IACZ6D,EAAAA,EAAAA,IAA8CC,EAAA,CAAlCE,QAAOC,EAAAW,aAAW,C,kBAAE,IAAE,UAAF,S,yBAGzBC,SAAOJ,EAAAA,EAAAA,KAChB,IAAkC,EAAlCK,EAAAA,EAAAA,IAAkCC,EAAAC,OAAA,WAA3BC,WAAQC,EAAA,KAAAA,EAAA,OAAAC,IAAElB,EAAAmB,UAAAnB,EAAAmB,YAAAD,S,yBAOzB,OACEpD,KAAM,aACNsD,IAAAA,GACE,MAAO,CACLf,eAAe,EAEnB,EACAgB,MAAO,CACLtF,MAAO,CACL+D,KAAMwB,OACNV,QAAS,KAGbW,QAAS,CACPtB,UAAAA,GACExE,KAAK4E,eAAgB,CACvB,EACAM,WAAAA,GACElF,KAAK4E,eAAgB,CACvB,EACAc,QAAAA,CAASxE,GACPlB,KAAK+F,MAAM,WAAY7E,GACvBlB,KAAKkF,aACP,I,QCtCJ,MAAMc,GAA2B,OAAgB,EAAQ,CAAC,CAAC,SAASC,KAEpE,O,2FCNOjC,MAAM,iB,GAoCAA,MAAM,U,GAaNA,MAAM,iB,8NAjDjBC,EAAAA,EAAAA,IAuDM,MAvDNe,EAuDM,EAtDJb,EAAAA,EAAAA,IAqDU+B,EAAA,CArDAC,MAAOxB,EAAAyB,MAAI,C,kBAMnB,IAUe,EAVfjC,EAAAA,EAAAA,IAUekC,EAAA,CAVDC,MAAM,QAAM,C,kBACxB,IAQW,EARXnC,EAAAA,EAAAA,IAQWoC,EAAA,C,WARQ5B,EAAA6B,O,qCAAA7B,EAAA6B,OAAM3B,GAAE4B,SAAA,GAAUC,SAAUjC,EAAA5C,a,eACpB4C,EAAA5C,gB,EAAU,C,KAAxB,S,aACT,IAIa,EAJbsC,EAAAA,EAAAA,IAIawC,EAAA,CAJDrG,MAAM,OAAOsG,IAAI,U,CAChBzB,SAAOJ,EAAAA,EAAAA,KAChB,IAAuD,EAAvDZ,EAAAA,EAAAA,IAAuD0C,EAAA,CAAxCC,aAAYvC,EAAAwC,cAAeC,MAAM,M,8FAM1D7C,EAAAA,EAAAA,IAUekC,EAAA,CAVDC,MAAM,MAAI,C,kBACtB,IAQW,EARXnC,EAAAA,EAAAA,IAQWoC,EAAA,C,WARQ5B,EAAAsC,Q,qCAAAtC,EAAAsC,QAAOpC,GAAE4B,SAAA,I,CACfS,QAAMnC,EAAAA,EAAAA,KACf,IAIa,EAJbZ,EAAAA,EAAAA,IAIawC,EAAA,CAJDrG,MAAM,OAAOsG,IAAI,U,CAChBzB,SAAOJ,EAAAA,EAAAA,KAChB,IAAwD,EAAxDZ,EAAAA,EAAAA,IAAwD0C,EAAA,CAAzCC,aAAYvC,EAAAwC,cAAeC,MAAM,O,0EAM1D7C,EAAAA,EAAAA,IAKekC,EAAA,CALDC,MAAM,MAAI,C,kBACtB,IAGY,EAHZnC,EAAAA,EAAAA,IAGYoC,EAAA,C,WAFD5B,EAAAyB,KAAK9F,M,qCAALqE,EAAAyB,KAAK9F,MAAKuE,GACnBsC,YAAY,a,iCAGhBhD,EAAAA,EAAAA,IAYekC,EAAA,CAZDC,MAAM,MAAI,C,kBACtB,IAUM,EAVNpC,EAAAA,EAAAA,GAUM,MAVNkD,EAUM,EARJjD,EAAAA,EAAAA,IAOEkD,EAAA,CANQ9G,QAASoE,EAAAyB,KAAK7F,Q,kCAALoE,EAAAyB,KAAK7F,QAAOsE,GAC7ByC,YAAY,OACZC,MAAM,OACNC,QAAQ,YACRL,YAAY,yBACZP,IAAI,U,gCAIVzC,EAAAA,EAAAA,IAKekC,EAAA,M,kBAJb,IAGM,EAHNnC,EAAAA,EAAAA,GAGM,MAHNuD,EAGM,EAFJtD,EAAAA,EAAAA,IAA6DC,EAAA,CAAlDC,KAAK,UAAWC,QAAOC,EAAAmD,a,mBAAa,IAAE,UAAF,S,qBAC/CvD,EAAAA,EAAAA,IAA8DC,EAAA,CAAnDC,KAAK,UAAWC,QAAOC,EAAAoD,c,mBAAc,IAAE,UAAF,S,0GAY1D,GACEtF,KAAM,gBACNuF,WAAY,CACVC,WAAU,aACVC,aAAYA,EAAAA,YAEdlC,MAAO,CACLhE,YAAa,CACXyC,KAAM0D,OACNC,UAAU,GAEZnG,WAAY,CACVwC,KAAM4D,QACN9C,SAAS,IAGbQ,IAAAA,GACE,MAAO,CACLS,KAAM,CACJhG,GAAI,GACJD,KAAM,GACNE,UAAW,GACXC,MAAO,GACPC,QAAS,GACTC,OAAQ,IAEVgG,OAAQ,GACRS,QAAS,GAEb,EACAnB,QAAS,CACPiB,aAAAA,CAAc7F,EAAM8F,GAClB,GAAI9F,EAAKH,OAAS,EAAG,CACnB,IAAIgC,EAAS7B,EACVgH,KAAKC,IACJ,IAAI5F,EAASpB,EAAAA,EAAOiB,kBAAkB+F,GACtC,MAAQ,GAAE5F,EAAOF,QAAQE,EAAO6F,aAAa,IAE9CC,KAAK,MACM,OAAVrB,GACFhH,KAAKwG,OAASzD,EACd/C,KAAKoG,KAAKhG,GAAKc,IAEflB,KAAKiH,QAAUlE,EACf/C,KAAKoG,KAAK/F,UAAYa,EAE1B,KAAO,CACL,IAAIoH,EAAUjH,MAAMC,QAAQJ,GAAQA,EAAK,GAAKA,EAChC,OAAV8F,GACFhH,KAAKoG,KAAKhG,GAAKkI,EACftI,KAAKwG,OAAU,GAAErF,EAAAA,EAAOiB,kBAAkBkG,GAASjG,QACjDlB,EAAAA,EAAOiB,kBAAkBkG,GAASF,gBAGpCpI,KAAKoG,KAAK/F,UAAYiI,EACtBtI,KAAKiH,QAAW,GAAE9F,EAAAA,EAAOiB,kBAAkBkG,GAASjG,QAClDlB,EAAAA,EAAOiB,kBAAkBkG,GAASF,cAGxC,CACApI,KAAKuI,MAAMC,OAAOtD,aACpB,EACAwC,WAAAA,GACE1H,KAAK+F,MAAM,cAAe/F,KAAKoG,KACjC,EACAqC,kBAAAA,GACE,MAAMC,EAAYpJ,EAAAA,EAAQqD,mBAAmB3C,KAAK4B,aAC5C+G,EAAOrJ,EAAAA,EAAQuD,2BAA2B7C,KAAK4B,aACrDgH,QAAQC,IAAIF,EAAKxI,KAAMwI,EAAKvI,IAC5BJ,KAAKoG,KAAKhG,GAAKJ,KAAK6B,WAAa8G,EAAKxI,KAAO,GAC7CH,KAAKoG,KAAKA,KAAOuC,EAAKvI,GACtBJ,KAAKwG,OAASxG,KAAK6B,WACd,GAAEV,EAAAA,EAAOiB,kBAAkBuG,EAAKxI,MAAMkC,QACrClB,EAAAA,EAAOiB,kBAAkBuG,EAAKxI,MAAMiI,cAEtC,GACJpI,KAAKoG,KAAK9F,MAAQN,KAAK6B,WAClB,OAAM6G,EAAUpI,QAChB,OAAMoI,EAAUpI,QACrBN,KAAKoG,KAAK7F,QAAW,2GAA0GmI,EAAUvI,mBAAmBuI,EAAUtI,eAAesI,EAAUrI,wCAAwCqI,EAAUnI,SACnP,EACAoH,YAAAA,GACEmB,EAAAA,EAAaC,QAAQ,eAAgB,KAAM,CACzCC,kBAAmB,IACnBC,iBAAkB,MAClB5E,KAAM,YAEL6E,MAAK,KACJlJ,KAAK+F,MAAM,eAAe,IAE3BoD,OAAM,QACX,GAEFC,OAAAA,GACEpJ,KAAKyI,oBACP,G,QCxJF,MAAMzC,GAA2B,OAAgB,EAAQ,CAAC,CAAC,SAASC,GAAQ,CAAC,YAAY,qBAEzF,O","sources":["webpack://vue-projectver2/./src/components/composables/Message.js","webpack://vue-projectver2/./src/components/common/dialogSlot.vue","webpack://vue-projectver2/./src/components/common/dialogSlot.vue?74b8","webpack://vue-projectver2/./src/components/private/editMessage.vue","webpack://vue-projectver2/./src/components/private/editMessage.vue?d1ea"],"sourcesContent":["import { shallowReactive } from \"vue\";\r\nimport moment from \"moment\";\r\nimport { Member } from \"./Member\";\r\nimport { Alarm } from \"./Alarm\";\r\n\r\nexport const Message = shallowReactive({\r\n  List: localStorage.getItem(\"messageList\")\r\n    ? JSON.parse(localStorage.getItem(\"messageList\"))\r\n    : [],\r\n  refreshList() {\r\n    localStorage.setItem(\"messageList\", JSON.stringify(this.List));\r\n    this.List = JSON.parse(localStorage.getItem(\"messageList\"));\r\n  },\r\n  template: {\r\n    index: \"\",\r\n    from: \"\",\r\n    to: \"\",\r\n    reference: \"\",\r\n    title: \"\",\r\n    content: \"\",\r\n    update: moment().format(\"YYYY-MM-DD\"),\r\n    status: true, // true: 존재하는 메세지 false: 삭제된 메세지\r\n    read: false, // true: 읽은 메세지 false: 읽지 않은 메세지\r\n  },\r\n  createMessage(protoItem) {\r\n    if (protoItem.to.length > 1) {\r\n      protoItem.to.forEach((el) => {\r\n        const item = {\r\n          index: this.List.length,\r\n          from: Member.currentMember,\r\n          to: el,\r\n          reference:\r\n            protoItem.reference === \"\"\r\n              ? []\r\n              : Array.isArray(protoItem.reference)\r\n              ? protoItem.reference\r\n              : [protoItem.reference],\r\n          title: protoItem.title,\r\n          content: protoItem.content,\r\n          update: moment().format(\"YYYY-MM-DD\"),\r\n          status: true,\r\n          read: false,\r\n        };\r\n        Alarm.createAlarm(\"messageSend\", item.from, item.to);\r\n        this.List.push(item);\r\n      });\r\n      this.refreshList();\r\n      return;\r\n    }\r\n    const item = {\r\n      index: this.List.length,\r\n      from: Member.currentMember,\r\n      to: protoItem.to,\r\n      reference:\r\n        protoItem.reference === \"\"\r\n          ? []\r\n          : Array.isArray(protoItem.reference)\r\n          ? protoItem.reference\r\n          : [protoItem.reference],\r\n      title: protoItem.title,\r\n      content: protoItem.content,\r\n      update: moment().format(\"YYYY-MM-DD\"),\r\n      status: true,\r\n    };\r\n    this.List.push(item);\r\n    Alarm.createAlarm(\"messageSend\", item.from, item.to);\r\n    this.refreshList();\r\n  },\r\n  editMessage(protoMessage, parentIndex, replyCheck = false) {\r\n    const newMessage = {\r\n      index: this.List.length,\r\n      from: Member.currentMember,\r\n      to: protoMessage.to,\r\n      reference:\r\n        protoMessage.reference === \"\"\r\n          ? []\r\n          : Array.isArray(protoMessage.reference)\r\n          ? protoMessage.reference\r\n          : [protoMessage.reference],\r\n      title: protoMessage.title,\r\n      content: protoMessage.content,\r\n      update: moment().format(\"YYYY-MM-DD\"),\r\n      status: true,\r\n      read: false,\r\n    };\r\n    if (replyCheck) {\r\n      this.filterReplyMessageGroupReply(parentIndex).length > 0\r\n        ? this.addReplyMessageGroup(parentIndex, newMessage.index)\r\n        : this.createReplyMessageGroup(parentIndex, newMessage.index);\r\n    }\r\n    this.List.push(newMessage);\r\n    Alarm.createAlarm(\"messageSend\", newMessage.from, newMessage.to);\r\n    this.refreshList();\r\n  },\r\n  getAllList() {\r\n    let result = [];\r\n    this.List.forEach((el) => {\r\n      if (el.status) {\r\n        let reference = \"\";\r\n        if (el.reference) {\r\n          el.reference.forEach((el) => {\r\n            reference += Member.findMemberByIndex(el).name + \" ,\";\r\n          });\r\n        } else {\r\n          reference = [];\r\n        }\r\n        result.push({\r\n          index: el.index,\r\n          from: Member.findMemberByIndex(el.from).name,\r\n          to: Member.findMemberByIndex(el.to).name,\r\n          reference: reference,\r\n          title: el.title,\r\n          content: el.content,\r\n          update: el.update,\r\n          status: el.status,\r\n          read: el.read,\r\n        });\r\n      }\r\n    });\r\n    return result;\r\n  },\r\n  getMessage(member) {\r\n    const memberName = Member.findMemberByIndex(member).name;\r\n    return this.getAllList().filter(\r\n      (el) => el.to === memberName || el.reference.includes(memberName)\r\n    );\r\n  },\r\n  findMessageByIndex(index) {\r\n    return this.getAllList().find((el) => el.index === index);\r\n  },\r\n  findOriginalMessageByIndex(index) {\r\n    return this.List.find((el) => el.index === index);\r\n  },\r\n  deleteMessage(index) {\r\n    const target = this.findMessageByIndex(index);\r\n    target.status = false;\r\n    this.refreshList();\r\n  },\r\n  calculateMessageCountByMessage(index) {\r\n    const target = this.List.find((el) => el.index === index);\r\n    const targetMember = target.to;\r\n    const targetAllMessage = this.List.filter((el) => el.to === targetMember);\r\n    const targetmessage = targetAllMessage.find((el) => el.index === index);\r\n    return `${targetAllMessage.indexOf(targetmessage) + 1}/${\r\n      targetAllMessage.length\r\n    }`;\r\n  },\r\n  referenceCheck(index) {\r\n    const target = this.List.find((el) => el.index === index);\r\n    return target.to === Member.currentMember;\r\n  },\r\n  readMessage(index) {\r\n    const target = this.List.find((el) => el.index === index);\r\n    target.read = true;\r\n    this.refreshList();\r\n  },\r\n  // 아래 코드는 메시지가 답장을 통해서 생성되었을때, 원본과 답장을 그룹화하여 차후 메시지 보기를 할때 원본과 답장을 함께 보여주기 위한 코드입니다.\r\n  ReplyMessageGroup: localStorage.getItem(\"replyMessageGroup\")\r\n    ? JSON.parse(localStorage.getItem(\"replyMessageGroup\"))\r\n    : [],\r\n  refreshGroup() {\r\n    localStorage.setItem(\r\n      \"replyMessageGroup\",\r\n      JSON.stringify(this.ReplyMessageGroup)\r\n    );\r\n    this.ReplyMessageGroup = JSON.parse(\r\n      localStorage.getItem(\"replyMessageGroup\")\r\n    );\r\n  },\r\n  createReplyMessageGroup(originalMessage, replyMessage) {\r\n    const group = {\r\n      index: this.ReplyMessageGroup.length,\r\n      originalMessage: originalMessage,\r\n      replyMessage: [replyMessage],\r\n      status: true,\r\n    };\r\n    this.ReplyMessageGroup.push(group);\r\n    this.refreshGroup();\r\n  },\r\n  addReplyMessageGroup(originalMessage, replyMessage) {\r\n    let target = this.findGroupByOGIndex(originalMessage);\r\n    if (target === undefined) {\r\n      target = this.filterReplyMessageGroupReply(originalMessage)[0];\r\n    }\r\n    target.replyMessage.push(replyMessage);\r\n    this.refreshGroup();\r\n  },\r\n  findGroupByOGIndex(index) {\r\n    return this.ReplyMessageGroup.find((el) => el.originalMessage === index);\r\n  },\r\n  filterReplyMessageGroupReply(index) {\r\n    return this.ReplyMessageGroup.filter((el) =>\r\n      el.replyMessage.includes(index)\r\n    );\r\n  },\r\n  getReplyChainArray(unknownIndex) {\r\n    const result = [];\r\n    if (this.findGroupByOGIndex(unknownIndex)) {\r\n      const target = this.findGroupByOGIndex(unknownIndex);\r\n      result.push(this.findOriginalMessageByIndex(target.originalMessage));\r\n      target.replyMessage.forEach((el) => {\r\n        result.push(this.findOriginalMessageByIndex(el));\r\n      });\r\n      return result;\r\n    } else if (this.filterReplyMessageGroupReply(unknownIndex).length > 0) {\r\n      const target = this.filterReplyMessageGroupReply(unknownIndex);\r\n      target.forEach((el) => {\r\n        result.push(this.findOriginalMessageByIndex(el.originalMessage));\r\n        el.replyMessage.forEach((el) => {\r\n          result.push(this.findOriginalMessageByIndex(el));\r\n        });\r\n      });\r\n      return result;\r\n    } else {\r\n      return result;\r\n    }\r\n  },\r\n});\r\n","<template>\r\n  <div>\r\n    <div>\r\n      <el-button type=\"primary\" @click=\"openDialog\">{{ title }}</el-button>\r\n    </div>\r\n    <el-dialog v-model=\"dialogVisible\" append-to-body :show-close=\"false\">\r\n      <template #header>\r\n        <div class=\"el-header\">\r\n          <h2>{{ title }}</h2>\r\n          <el-button @click=\"closeDialog\">닫기</el-button>\r\n        </div>\r\n      </template>\r\n      <template #default>\r\n        <slot @saveForm=\"saveForm\"></slot>\r\n      </template>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"dialogSlot\",\r\n  data() {\r\n    return {\r\n      dialogVisible: false,\r\n    };\r\n  },\r\n  props: {\r\n    title: {\r\n      type: String,\r\n      default: \"\",\r\n    },\r\n  },\r\n  methods: {\r\n    openDialog() {\r\n      this.dialogVisible = true;\r\n    },\r\n    closeDialog() {\r\n      this.dialogVisible = false;\r\n    },\r\n    saveForm(item) {\r\n      this.$emit(\"saveForm\", item);\r\n      this.closeDialog();\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"\"></style>\r\n","import { render } from \"./dialogSlot.vue?vue&type=template&id=5383be66\"\nimport script from \"./dialogSlot.vue?vue&type=script&lang=js\"\nexport * from \"./dialogSlot.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template lang=\"\">\r\n  <div class=\"formContanier\">\r\n    <el-form :model=\"form\">\r\n      <!-- 받는사람(memberTree 이용해서 dialog띄우기) -->\r\n      <!-- reference는 받는사람, 보낸사람(currentMember)를 제외한 인원에서 memberTransfer 받기(memberTransfer 일부 수정필요) -->\r\n      <!-- title은 일반 input -->\r\n      <!-- content는 QuillEditor사용해서 내용 받기. 현재는 html로 받지만 delta 값 봐서 delta로 받는게 더 나을수도 있음 -->\r\n      <!-- update는 현재시간으로 자동으로 받기 -->\r\n      <el-form-item label=\"받는사람\">\r\n        <el-input v-model=\"showTo\" readonly :disabled=\"replyCheck\">\r\n          <template #append v-if=\"!replyCheck\">\r\n            <dialogSlot title=\"배정하기\" ref=\"dialog\">\r\n              <template #default>\r\n                <assignMember @saveMember=\"addressMember\" where=\"to\" />\r\n              </template>\r\n            </dialogSlot>\r\n          </template>\r\n        </el-input>\r\n      </el-form-item>\r\n      <el-form-item label=\"참조\">\r\n        <el-input v-model=\"showRef\" readonly>\r\n          <template #append>\r\n            <dialogSlot title=\"배정하기\" ref=\"dialog\">\r\n              <template #default>\r\n                <assignMember @saveMember=\"addressMember\" where=\"ref\" />\r\n              </template>\r\n            </dialogSlot>\r\n          </template>\r\n        </el-input>\r\n      </el-form-item>\r\n      <el-form-item label=\"제목\">\r\n        <el-input\r\n          v-model=\"form.title\"\r\n          placeholder=\"제목을 입력하세요\"\r\n        ></el-input>\r\n      </el-form-item>\r\n      <el-form-item label=\"내용\">\r\n        <div class=\"editor\">\r\n          <!-- 크기 조절 방법이 없을 경우 dialog처리하거나 tiptab을 이용해야 할수도 있음 -->\r\n          <QuillEditor\r\n            v-model:content=\"form.content\"\r\n            contentType=\"html\"\r\n            theme=\"snow\"\r\n            toolbar=\"essential\"\r\n            placeholder=\"줄이 늘어날수록 창이 자동으로 늘어납니다\"\r\n            ref=\"Editor\"\r\n          />\r\n        </div>\r\n      </el-form-item>\r\n      <el-form-item>\r\n        <div class=\"CenterButtons\">\r\n          <el-button type=\"primary\" @click=\"sendMessage\">작성</el-button>\r\n          <el-button type=\"primary\" @click=\"returnToMain\">취소</el-button>\r\n        </div>\r\n      </el-form-item>\r\n    </el-form>\r\n  </div>\r\n</template>\r\n<script>\r\nimport { Member } from \"@/components/composables/Member\";\r\nimport dialogSlot from \"@/components/common/dialogSlot.vue\";\r\nimport assignMember from \"@/components/common/assignMember.vue\";\r\nimport { Message } from \"@/components/composables/Message\";\r\nimport { ElMessageBox } from \"element-plus\";\r\nexport default {\r\n  name: \"createMessage\",\r\n  components: {\r\n    dialogSlot,\r\n    assignMember,\r\n  },\r\n  props: {\r\n    parentIndex: {\r\n      type: Number,\r\n      required: true,\r\n    },\r\n    replyCheck: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n      form: {\r\n        to: \"\",\r\n        from: \"\",\r\n        reference: \"\",\r\n        title: \"\",\r\n        content: \"\",\r\n        update: \"\",\r\n      },\r\n      showTo: \"\",\r\n      showRef: \"\",\r\n    };\r\n  },\r\n  methods: {\r\n    addressMember(item, where) {\r\n      if (item.length > 1) {\r\n        let target = item\r\n          .map((i) => {\r\n            let member = Member.findMemberByIndex(i);\r\n            return `${member.name}(${member.department})`;\r\n          })\r\n          .join(\", \");\r\n        if (where === \"to\") {\r\n          this.showTo = target;\r\n          this.form.to = item;\r\n        } else {\r\n          this.showRef = target;\r\n          this.form.reference = item;\r\n        }\r\n      } else {\r\n        let newItem = Array.isArray(item) ? item[0] : item;\r\n        if (where === \"to\") {\r\n          this.form.to = newItem;\r\n          this.showTo = `${Member.findMemberByIndex(newItem).name}(${\r\n            Member.findMemberByIndex(newItem).department\r\n          })`;\r\n        } else {\r\n          this.form.reference = newItem;\r\n          this.showRef = `${Member.findMemberByIndex(newItem).name}(${\r\n            Member.findMemberByIndex(newItem).department\r\n          })`;\r\n        }\r\n      }\r\n      this.$refs.dialog.closeDialog();\r\n    },\r\n    sendMessage() {\r\n      this.$emit(\"editMessage\", this.form);\r\n    },\r\n    giveCurrentMessage() {\r\n      const OGMessage = Message.findMessageByIndex(this.parentIndex);\r\n      const OGOG = Message.findOriginalMessageByIndex(this.parentIndex);\r\n      console.log(OGOG.from, OGOG.to);\r\n      this.form.to = this.replyCheck ? OGOG.from : \"\";\r\n      this.form.form = OGOG.to;\r\n      this.showTo = this.replyCheck\r\n        ? `${Member.findMemberByIndex(OGOG.from).name}(${\r\n            Member.findMemberByIndex(OGOG.from).department\r\n          })`\r\n        : \"\";\r\n      this.form.title = this.replyCheck\r\n        ? `RE: ${OGMessage.title}`\r\n        : `FW: ${OGMessage.title}`;\r\n      this.form.content = `<p><br/></p><p><br/></p><p><br/></p><p><br/></p><p><br/></p><p>=============================</p><p>보낸사람:${OGMessage.from}</p><p>받는사람:${OGMessage.to}</p><p>참조:${OGMessage.reference}</p><p><br/></p><p><br/></p>${OGMessage.content}`;\r\n    },\r\n    returnToMain() {\r\n      ElMessageBox.confirm(\"정말 취소하시겠습니까?\", \"경고\", {\r\n        confirmButtonText: \"예\",\r\n        cancelButtonText: \"아니오\",\r\n        type: \"warning\",\r\n      })\r\n        .then(() => {\r\n          this.$emit(\"returnToMain\");\r\n        })\r\n        .catch(() => {});\r\n    },\r\n  },\r\n  mounted() {\r\n    this.giveCurrentMessage();\r\n  },\r\n};\r\n</script>\r\n<style scoped>\r\n.editor {\r\n  width: 100%;\r\n  height: 100%;\r\n  min-height: 300px;\r\n  overflow-y: auto;\r\n}\r\n</style>\r\n","import { render } from \"./editMessage.vue?vue&type=template&id=9b97d028&scoped=true&lang=true\"\nimport script from \"./editMessage.vue?vue&type=script&lang=js\"\nexport * from \"./editMessage.vue?vue&type=script&lang=js\"\n\nimport \"./editMessage.vue?vue&type=style&index=0&id=9b97d028&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-9b97d028\"]])\n\nexport default __exports__"],"names":["Message","shallowReactive","List","localStorage","getItem","JSON","parse","refreshList","setItem","stringify","this","template","index","from","to","reference","title","content","update","moment","format","status","read","createMessage","protoItem","length","forEach","el","item","Member","currentMember","Array","isArray","Alarm","createAlarm","push","editMessage","protoMessage","parentIndex","replyCheck","newMessage","filterReplyMessageGroupReply","addReplyMessageGroup","createReplyMessageGroup","getAllList","result","findMemberByIndex","name","getMessage","member","memberName","filter","includes","findMessageByIndex","find","findOriginalMessageByIndex","deleteMessage","target","calculateMessageCountByMessage","targetMember","targetAllMessage","targetmessage","indexOf","referenceCheck","readMessage","ReplyMessageGroup","refreshGroup","originalMessage","replyMessage","group","findGroupByOGIndex","undefined","getReplyChainArray","unknownIndex","class","_createElementBlock","_createElementVNode","_createVNode","_component_el_button","type","onClick","$options","openDialog","$props","_component_el_dialog","$data","dialogVisible","$event","header","_withCtx","_hoisted_1","_toDisplayString","closeDialog","default","_renderSlot","_ctx","$slots","onSaveForm","_cache","args","saveForm","data","props","String","methods","$emit","__exports__","render","_component_el_form","model","form","_component_el_form_item","label","_component_el_input","showTo","readonly","disabled","_component_dialogSlot","ref","_component_assignMember","onSaveMember","addressMember","where","showRef","append","placeholder","_hoisted_2","_component_QuillEditor","contentType","theme","toolbar","_hoisted_3","sendMessage","returnToMain","components","dialogSlot","assignMember","Number","required","Boolean","map","i","department","join","newItem","$refs","dialog","giveCurrentMessage","OGMessage","OGOG","console","log","ElMessageBox","confirm","confirmButtonText","cancelButtonText","then","catch","mounted"],"sourceRoot":""}